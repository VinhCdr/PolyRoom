/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package poro.gui;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import poro.module.CalendarManager;
import poro.module.db.DatabaseManager;
import poro.module.db.data.MuonPhong;
import poro.module.db.data.Phong;
import poro.module.db.data.SinhVien;
import poro.module.db.data.TaiKhoan;
import poro.module.db.data.ThongTinMuonPhong;

/**
 *
 * @author vinh
 */
public class TraPhongJDialog extends javax.swing.JDialog {

    /**
     * Creates new form TraPhongJDialog
     */
    public TraPhongJDialog(java.awt.Frame parent, boolean modal, ArrayList<ThongTinMuonPhong> ttmps) {
        super(parent, modal);
        initComponents();

        this.ttmps = ttmps;
        loadingTable();
    }

    ArrayList<ThongTinMuonPhong> ttmps;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblList = new javax.swing.JTable();
        btnTraPhong = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Trả phòng");

        tblList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã mượn", "Tên phòng", "Người mượn", "Email", "Chức vụ", "Lý do", "TG bắt đầu", "TG trả dự kiến"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblList);

        btnTraPhong.setText("Trả phòng");
        btnTraPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraPhongActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 979, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnTraPhong)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnTraPhong)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTraPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraPhongActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) tblList.getModel();
        int rowSeleted = tblList.getSelectedRow();
        if (rowSeleted == -1 || rowSeleted >= dtm.getRowCount()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn phòng muốn trả");
            return;
        }
        int idMuon = (Integer) dtm.getValueAt(rowSeleted, 0);
        MuonPhong mp = new MuonPhong();
        mp.setIdMuonPhong(idMuon);
        ArrayList<MuonPhong> mps = DatabaseManager.executeQuery(mp, MuonPhong.EXECUTE_SELECT_BY_ID);
        if (mps == null || mps.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Phiếu mượn không tồn tại, vui lòng kiểm tra lại");
            return;
        }
        mp = mps.get(0);
        mp.setTgTraThucTe(CalendarManager.getNow());
        int ok = DatabaseManager.executeUpdate(mp, MuonPhong.EXECUTE_UPDATE_BY_ID);
        if (ok >= 0) {
            JOptionPane.showMessageDialog(this, "Trả phòng thành công");
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Trả phòng thất bại");
        }
    }//GEN-LAST:event_btnTraPhongActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TraPhongJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TraPhongJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TraPhongJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TraPhongJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TraPhongJDialog dialog = new TraPhongJDialog(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTraPhong;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblList;
    // End of variables declaration//GEN-END:variables

    private void loadingTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblList.getModel();
        dtm.setRowCount(0);
        if (ttmps == null || ttmps.isEmpty()) {
            return;
        }
        ttmps.forEach(tt -> {
            Phong p = tt.getPhong();
            MuonPhong mp = tt.getMuonPhong();
            SinhVien sv = tt.getSinhVien();
            TaiKhoan tk = tt.getTaiKhoan();
            dtm.addRow(new Object[]{
                mp.getIdMuonPhong(),
                p.getTenPhong(),
                sv == null ? tk.getTen() + " (" + tk.getIdTaiKhoan() + ")" : sv.getTenSV() + " ( " + sv.getIdSV() + ")",
                sv == null ? tk.getEmail() : sv.getEmail(),
                sv == null ? tk.isPhanQuyen() ? "Quản lý" : "Giảng viên" : "Sinh viên",
                mp.getLyDo(),
                mp.getTgMuon(),
                mp.getTgTra()
            });
        });
    }

}
